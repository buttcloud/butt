version: "3.6"
services:
  peer-server:
    image: buttcloud/butt-peer-server:v1.0.1
    ports:
      - target: 8008
        published: 8008
    environment:
      - ssb_host=peer-server
    volumes:
      - ssb:/home/node/.ssb
    labels:
      - "traefik.enable=false"
    deploy:
      restart_policy:
        condition: on-failure
    networks:
      - ssb
      - default

  landing:
    image: buttcloud/butt-landing:v1.0.3
    environment:
      - ssb_host=peer-server
      - ssb_landing__host=landing
    volumes:
      - ssb:/home/node/.ssb
    deploy:
      labels:
        - "traefik.enable=true"
        - "traefik.backend=landing"
        - "traefik.port=8901"
        - "traefik.frontend.rule=Host:${HOST:-example.butt.nz}"
        - "traefik.docker.network=proxy"
      restart_policy:
        condition: on-failure
    networks:
      - web
      - ssb
      - default

  proxy:
    image: traefik:1.5
    command:
      - "--api"
#      - "--entrypoints=Name:http Address::80 Redirect.EntryPoint:https"
#      - "--entrypoints=Name:https Address::443 TLS"
#      - "--defaultentrypoints=http,https"
#      - "--acme"
#      - "--acme.storage=/etc/traefik/acme/acme.json"
#      - "--acme.entryPoint=https"
#      - "--acme.httpChallenge.entryPoint=http"
#      - "--acme.OnHostRule=true"
#      - "--acme.onDemand=false"
#      - "--acme.email=contact@mydomain.ca"
      - "--docker"
      - "--docker.swarmmode"
      - "--docker.domain=mydomain.ca"
      - "--docker.watch"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - traefik-acme:/etc/traefik/acme:rw
    ports:
      - target: 80
        published: 80
      - target: 443
        published: 443
      - target: 8080
        published: 8080
    deploy:
      placement:
        constraints:
          - node.role == manager
      restart_policy:
        condition: on-failure
    networks:
      - web
      - default

volumes:
  ssb:
  traefik-acme:

networks:
  web:
    external: true
  ssb:
